# migrate-to-v4.8.ps1 - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ v4.8
# –ó–∞–ø—É—Å–∫–∞—Ç—å –∏–∑ –∫–æ—Ä–Ω—è —Ü–µ–ª–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
param(
    [string]$SourcePath = "F:\ProjectsAI\ManagerAgentAI",
    [string]$TargetPath = ".",
    [switch]$Force = $false,
    [switch]$Backup = $true,
    [switch]$Verbose = $false
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
$ErrorActionPreference = "Continue"
$ProgressPreference = "SilentlyContinue"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
function Test-FileExists {
    param([string]$Path)
    if (Test-Path $Path) {
        Write-ColorOutput "  ‚úÖ –ù–∞–π–¥–µ–Ω: $(Split-Path $Path -Leaf)" "Green"
        return $true
    } else {
        Write-ColorOutput "  ‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω: $(Split-Path $Path -Leaf)" "Yellow"
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
function Copy-Safe {
    param(
        [string]$Source,
        [string]$Destination,
        [string]$Description
    )
    try {
        if (Test-Path $Source) {
            Copy-Item $Source $Destination -Recurse -Force
            Write-ColorOutput "  ‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: $Description" "Green"
            return $true
        } else {
            Write-ColorOutput "  ‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω: $Description (—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω)" "Yellow"
            return $false
        }
    } catch {
        Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ $Description : $($_.Exception.Message)" "Red"
        return $false
    }
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
Write-ColorOutput "üöÄ ========================================" "Cyan"
Write-ColorOutput "üöÄ  –ú–ò–ì–†–ê–¶–ò–Ø –ü–†–û–ï–ö–¢–ê –î–û v4.8" "Cyan"
Write-ColorOutput "üöÄ ========================================" "Cyan"
Write-ColorOutput ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø—É—Ç–∏
Write-ColorOutput "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø—É—Ç–∏..." "Yellow"
if (!(Test-Path $SourcePath)) {
    Write-ColorOutput "‚ùå –û–®–ò–ë–ö–ê: –ò—Å—Ö–æ–¥–Ω—ã–π –ø—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω: $SourcePath" "Red"
    Write-ColorOutput "üí° –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä -SourcePath" "Cyan"
    exit 1
}
Write-ColorOutput "‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π –ø—É—Ç—å –Ω–∞–π–¥–µ–Ω: $SourcePath" "Green"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –ø—É—Ç–∏
Write-ColorOutput "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –ø—É—Ç–∏..." "Yellow"
if (!(Test-Path $TargetPath)) {
    Write-ColorOutput "‚ùå –û–®–ò–ë–ö–ê: –¶–µ–ª–µ–≤–æ–π –ø—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω: $TargetPath" "Red"
    exit 1
}
Write-ColorOutput "‚úÖ –¶–µ–ª–µ–≤–æ–π –ø—É—Ç—å –Ω–∞–π–¥–µ–Ω: $TargetPath" "Green"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
if ($Backup) {
    Write-ColorOutput "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..." "Yellow"
    $BackupPath = ".\backup-$(Get-Date -Format 'yyyy-MM-dd-HH-mm-ss')"
    try {
        Copy-Item -Path "." -Destination $BackupPath -Recurse -Exclude @("backup-*", ".git", "node_modules", "dist", "build") -Force
        Write-ColorOutput "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BackupPath" "Green"
    } catch {
        Write-ColorOutput "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: $($_.Exception.Message)" "Yellow"
    }
    Write-ColorOutput ""
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
Write-ColorOutput "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..." "Yellow"
$Folders = @(
    ".\.automation",
    ".\.manager", 
    ".\.manager\control-files",
    ".\.manager\Completed",
    ".\.manager\prompts",
    ".\.manager\scripts",
    ".\.manager\utils"
)

foreach ($folder in $Folders) {
    if (!(Test-Path $folder)) {
        try {
            New-Item -ItemType Directory -Path $folder -Force | Out-Null
            Write-ColorOutput "  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: $folder" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ $folder : $($_.Exception.Message)" "Red"
        }
    } else {
        Write-ColorOutput "  ‚ÑπÔ∏è  –ü–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $folder" "Cyan"
    }
}
Write-ColorOutput ""

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ .automation
Write-ColorOutput "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ .automation..." "Yellow"
$AutomationFiles = @(
    @{File="Quick-Access-Optimized-v4.8.ps1"; Desc="Quick Access Optimized v4.8"},
    @{File="Universal-Project-Manager-Optimized-v4.8.ps1"; Desc="Universal Project Manager v4.8"},
    @{File="Performance-Optimizer-v4.8.ps1"; Desc="Performance Optimizer v4.8"},
    @{File="Maximum-Performance-Optimizer-v4.8.ps1"; Desc="Maximum Performance Optimizer v4.8"},
    @{File="Project-Analysis-Optimizer-v4.8.ps1"; Desc="Project Analysis Optimizer v4.8"},
    @{File="Next-Generation-Technologies-v4.8.ps1"; Desc="Next Generation Technologies v4.8"},
    @{File="AI-Modules-Manager-v4.0.ps1"; Desc="AI Modules Manager v4.0"},
    @{File="AI-Enhanced-Features-Manager-v3.5.ps1"; Desc="AI Enhanced Features Manager v3.5"},
    @{File="Invoke-Automation.ps1"; Desc="Invoke Automation"},
    @{File="Universal-Automation-Manager-v3.5.ps1"; Desc="Universal Automation Manager v3.5"}
)

$CopiedFiles = 0
foreach ($fileInfo in $AutomationFiles) {
    $sourceFile = "$SourcePath\.automation\$($fileInfo.File)"
    $destFile = ".\.automation\$($fileInfo.File)"
    
    if (Test-FileExists $sourceFile) {
        if (Copy-Safe $sourceFile $destFile $fileInfo.Desc) {
            $CopiedFiles++
        }
    }
}
Write-ColorOutput "üìä –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤ .automation: $CopiedFiles –∏–∑ $($AutomationFiles.Count)" "Cyan"
Write-ColorOutput ""

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫ .automation
Write-ColorOutput "üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫ .automation..." "Yellow"
$AutomationFolders = @(
    @{Folder="ai"; Desc="AI –º–æ–¥—É–ª–∏"},
    @{Folder="quantum"; Desc="Quantum Computing –º–æ–¥—É–ª–∏"},
    @{Folder="blockchain"; Desc="Blockchain –º–æ–¥—É–ª–∏"},
    @{Folder="edge"; Desc="Edge Computing –º–æ–¥—É–ª–∏"},
    @{Folder="vr"; Desc="VR/AR –º–æ–¥—É–ª–∏"},
    @{Folder="scripts"; Desc="–°–∫—Ä–∏–ø—Ç—ã –∏ –∞–ª–∏–∞—Å—ã"},
    @{Folder="config"; Desc="–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"},
    @{Folder="templates"; Desc="–®–∞–±–ª–æ–Ω—ã"},
    @{Folder="testing"; Desc="–¢–µ—Å—Ç–æ–≤—ã–µ –º–æ–¥—É–ª–∏"},
    @{Folder="monitoring"; Desc="–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"}
)

$CopiedFolders = 0
foreach ($folderInfo in $AutomationFolders) {
    $sourceFolder = "$SourcePath\.automation\$($folderInfo.Folder)"
    $destFolder = ".\.automation\$($folderInfo.Folder)"
    
    if (Test-Path $sourceFolder) {
        if (Copy-Safe $sourceFolder $destFolder $folderInfo.Desc) {
            $CopiedFolders++
        }
    } else {
        Write-ColorOutput "  ‚ÑπÔ∏è  –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $($folderInfo.Folder)" "Cyan"
    }
}
Write-ColorOutput "üìä –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –ø–∞–ø–æ–∫ .automation: $CopiedFolders –∏–∑ $($AutomationFolders.Count)" "Cyan"
Write-ColorOutput ""

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ .manager
Write-ColorOutput "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ .manager..." "Yellow"
$ManagerFiles = @(
    @{File="start.md"; Desc="–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞"},
    @{File="Maximum-Manager-Optimizer-v4.8.ps1"; Desc="Maximum Manager Optimizer v4.8"},
    @{File="Universal-Project-Manager-Optimized-v4.8.ps1"; Desc="Universal Project Manager v4.8"},
    @{File="Quick-Start-Optimized-v4.8.ps1"; Desc="Quick Start Optimized v4.8"},
    @{File="README.md"; Desc="README –º–µ–Ω–µ–¥–∂–µ—Ä–∞"},
    @{File="dev.md"; Desc="Developer Guide"}
)

$CopiedManagerFiles = 0
foreach ($fileInfo in $ManagerFiles) {
    $sourceFile = "$SourcePath\.manager\$($fileInfo.File)"
    $destFile = ".\.manager\$($fileInfo.File)"
    
    if (Test-FileExists $sourceFile) {
        if (Copy-Safe $sourceFile $destFile $fileInfo.Desc) {
            $CopiedManagerFiles++
        }
    }
}
Write-ColorOutput "üìä –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤ .manager: $CopiedManagerFiles –∏–∑ $($ManagerFiles.Count)" "Cyan"
Write-ColorOutput ""

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ control-files
Write-ColorOutput "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ control-files..." "Yellow"
$ControlFiles = @(
    @{File="INSTRUCTIONS-v4.4.md"; Desc="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ v4.4"},
    @{File="QUICK-COMMANDS-v4.4.md"; Desc="–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã v4.4"},
    @{File="REQUIREMENTS-v4.2.md"; Desc="–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è v4.2"},
    @{File="AUTOMATION-GUIDE-v4.1.md"; Desc="–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ v4.1"},
    @{File="IDEA.md"; Desc="–ò–¥–µ–∏ –ø—Ä–æ–µ–∫—Ç–∞"},
    @{File="TODO.md"; Desc="–ó–∞–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞"},
    @{File="COMPLETED.md"; Desc="–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏"},
    @{File="ERRORS.md"; Desc="–û—à–∏–±–∫–∏ –∏ —Ä–µ—à–µ–Ω–∏—è"},
    @{File="ARCHITECTURE-v3.6.md"; Desc="–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ v3.6"},
    @{File="NEXT-GENERATION-TECHNOLOGIES-GUIDE-v4.8.md"; Desc="Next Generation Technologies Guide v4.8"}
)

$CopiedControlFiles = 0
foreach ($fileInfo in $ControlFiles) {
    $sourceFile = "$SourcePath\.manager\control-files\$($fileInfo.File)"
    $destFile = ".\.manager\control-files\$($fileInfo.File)"
    
    if (Test-FileExists $sourceFile) {
        if (Copy-Safe $sourceFile $destFile $fileInfo.Desc) {
            $CopiedControlFiles++
        }
    }
}
Write-ColorOutput "üìä –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ control-files: $CopiedControlFiles –∏–∑ $($ControlFiles.Count)" "Cyan"
Write-ColorOutput ""

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫ .manager
Write-ColorOutput "üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫ .manager..." "Yellow"
$ManagerFolders = @(
    @{Folder="prompts"; Desc="–ü—Ä–æ–º–ø—Ç—ã –¥–ª—è AI"},
    @{Folder="scripts"; Desc="–°–∫—Ä–∏–ø—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞"},
    @{Folder="utils"; Desc="–£—Ç–∏–ª–∏—Ç—ã"},
    @{Folder="reports"; Desc="–û—Ç—á–µ—Ç—ã"},
    @{Folder="design"; Desc="–î–∏–∑–∞–π–Ω –¥–æ–∫—É–º–µ–Ω—Ç—ã"}
)

$CopiedManagerFolders = 0
foreach ($folderInfo in $ManagerFolders) {
    $sourceFolder = "$SourcePath\.manager\$($folderInfo.Folder)"
    $destFolder = ".\.manager\$($folderInfo.Folder)"
    
    if (Test-Path $sourceFolder) {
        if (Copy-Safe $sourceFolder $destFolder $folderInfo.Desc) {
            $CopiedManagerFolders++
        }
    } else {
        Write-ColorOutput "  ‚ÑπÔ∏è  –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $($folderInfo.Folder)" "Cyan"
    }
}
Write-ColorOutput "üìä –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –ø–∞–ø–æ–∫ .manager: $CopiedManagerFolders –∏–∑ $($ManagerFolders.Count)" "Cyan"
Write-ColorOutput ""

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ cursor.json
Write-ColorOutput "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ cursor.json..." "Yellow"
$CursorSource = "$SourcePath\cursor.json"
$CursorDest = ".\cursor.json"

if (Test-FileExists $CursorSource) {
    if (Copy-Safe $CursorSource $CursorDest "Cursor Configuration v6.8") {
        Write-ColorOutput "‚úÖ cursor.json —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω" "Green"
    }
} else {
    Write-ColorOutput "‚ö†Ô∏è  cursor.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ" "Yellow"
}
Write-ColorOutput ""

# –°–æ–∑–¥–∞–Ω–∏–µ README.md –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
Write-ColorOutput "üìù –°–æ–∑–¥–∞–Ω–∏–µ README –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏..." "Yellow"
$ReadmeContent = @"
# üöÄ –ü—Ä–æ–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ v4.8

## ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ

**–î–∞—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:** $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
**–ò—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–µ–∫—Ç:** $SourcePath
**–í–µ—Ä—Å–∏—è:** v4.8.0

## üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏

1. **–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞–ª–∏–∞—Å—ã:**
   ```powershell
   . .\.automation\scripts\New-Aliases-v4.8.ps1
   ```

2. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º—É:**
   ```powershell
   mpo -Action test
   mmo -Action test
   qai -Action test
   ```

3. **–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:**
   ```powershell
   mpo -Action optimize -AI -Quantum -Verbose
   ```

## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏

- **–§–∞–π–ª—ã .automation:** $CopiedFiles –∏–∑ $($AutomationFiles.Count)
- **–ü–∞–ø–∫–∏ .automation:** $CopiedFolders –∏–∑ $($AutomationFolders.Count)
- **–§–∞–π–ª—ã .manager:** $CopiedManagerFiles –∏–∑ $($ManagerFiles.Count)
- **Control-files:** $CopiedControlFiles –∏–∑ $($ControlFiles.Count)
- **–ü–∞–ø–∫–∏ .manager:** $CopiedManagerFolders –∏–∑ $($ManagerFolders.Count)

## üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã v4.8

- `mpo` - Maximum Performance Optimizer v4.8
- `mmo` - Maximum Manager Optimizer v4.8
- `qai` - Quick Access AI v4.8
- `qaq` - Quick Access Quantum v4.8
- `qap` - Quick Access Performance v4.8
- `qao` - Quick Access Optimized v4.8
- `umo` - Universal Manager Optimized v4.8

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –≤ `.manager\control-files\` –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:
```powershell
pwsh -File .\.automation\Maximum-Performance-Optimizer-v4.8.ps1 -Action help
```
"@

try {
    $ReadmeContent | Out-File -FilePath ".\MIGRATION-README.md" -Encoding UTF8
    Write-ColorOutput "‚úÖ –°–æ–∑–¥–∞–Ω MIGRATION-README.md" "Green"
} catch {
    Write-ColorOutput "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å MIGRATION-README.md: $($_.Exception.Message)" "Yellow"
}
Write-ColorOutput ""

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
Write-ColorOutput "üéâ ========================================" "Green"
Write-ColorOutput "üéâ  –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!" "Green"
Write-ColorOutput "üéâ ========================================" "Green"
Write-ColorOutput ""
Write-ColorOutput "üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:" "Cyan"
Write-ColorOutput "  ‚Ä¢ –§–∞–π–ª—ã .automation: $CopiedFiles –∏–∑ $($AutomationFiles.Count)" "White"
Write-ColorOutput "  ‚Ä¢ –ü–∞–ø–∫–∏ .automation: $CopiedFolders –∏–∑ $($AutomationFolders.Count)" "White"
Write-ColorOutput "  ‚Ä¢ –§–∞–π–ª—ã .manager: $CopiedManagerFiles –∏–∑ $($ManagerFiles.Count)" "White"
Write-ColorOutput "  ‚Ä¢ Control-files: $CopiedControlFiles –∏–∑ $($ControlFiles.Count)" "White"
Write-ColorOutput "  ‚Ä¢ –ü–∞–ø–∫–∏ .manager: $CopiedManagerFolders –∏–∑ $($ManagerFolders.Count)" "White"
Write-ColorOutput ""

Write-ColorOutput "üìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:" "Cyan"
Write-ColorOutput "  1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: . .\.automation\scripts\New-Aliases-v4.8.ps1" "White"
Write-ColorOutput "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: mpo -Action test" "White"
Write-ColorOutput "  3. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ: mpo -Action optimize -AI -Quantum" "White"
Write-ColorOutput "  4. –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ: .\MIGRATION-README.md" "White"
Write-ColorOutput ""

Write-ColorOutput "üöÄ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å v4.8!" "Green"
Write-ColorOutput ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
Write-ColorOutput "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..." "Yellow"
$CriticalFiles = @(
    ".\.automation\Maximum-Performance-Optimizer-v4.8.ps1",
    ".\.manager\start.md",
    ".\.manager\control-files\INSTRUCTIONS-v4.4.md",
    ".\cursor.json"
)

$AllCriticalFilesExist = $true
foreach ($file in $CriticalFiles) {
    if (Test-Path $file) {
        Write-ColorOutput "  ‚úÖ $file" "Green"
    } else {
        Write-ColorOutput "  ‚ùå $file" "Red"
        $AllCriticalFilesExist = $false
    }
}

if ($AllCriticalFilesExist) {
    Write-ColorOutput "‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ!" "Green"
} else {
    Write-ColorOutput "‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–µ–∫—Ç." "Yellow"
}

Write-ColorOutput ""
Write-ColorOutput "üéØ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–¥–∞—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å v4.8!" "Cyan"
