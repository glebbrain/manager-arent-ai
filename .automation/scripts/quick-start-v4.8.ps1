# quick-start-v4.8.ps1 - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º v4.8
# –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ —ç—Ç–∞–ø—ã: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Üí –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ‚Üí –ê–Ω–∞–ª–∏–∑ ‚Üí –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è

param(
    [string]$SourcePath = "F:\ProjectsAI\ManagerAgentAI",
    [string]$ProjectName = "",
    [switch]$Force = $false,
    [switch]$Backup = $true,
    [switch]$Verbose = $false,
    [switch]$SkipCopy = $false,
    [switch]$SkipAnalysis = $false,
    [switch]$SkipOptimization = $false
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
$ErrorActionPreference = "Continue"
$ProgressPreference = "SilentlyContinue"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
function Test-CommandSuccess {
    param([string]$Command, [string]$Description)
    
    if ($LASTEXITCODE -eq 0) {
        Write-ColorOutput "  ‚úÖ $Description - –£–°–ü–ï–®–ù–û" "Green"
        return $true
    } else {
        Write-ColorOutput "  ‚ùå $Description - –û–®–ò–ë–ö–ê (–∫–æ–¥: $LASTEXITCODE)" "Red"
        return $false
    }
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
Write-ColorOutput "üöÄ ========================================" "Cyan"
Write-ColorOutput "üöÄ  –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –°–ò–°–¢–ï–ú–´ v4.8" "Cyan"
Write-ColorOutput "üöÄ ========================================" "Cyan"
Write-ColorOutput ""

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–æ–µ–∫—Ç–∞
if ([string]::IsNullOrEmpty($ProjectName)) {
    $ProjectName = Split-Path -Leaf (Get-Location)
    Write-ColorOutput "üìÅ –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞: $ProjectName" "Yellow"
}

Write-ColorOutput "üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:" "Yellow"
Write-ColorOutput "  ‚Ä¢ –ò—Å—Ö–æ–¥–Ω—ã–π –ø—É—Ç—å: $SourcePath" "White"
Write-ColorOutput "  ‚Ä¢ –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞: $ProjectName" "White"
Write-ColorOutput "  ‚Ä¢ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ: $Force" "White"
Write-ColorOutput "  ‚Ä¢ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $Backup" "White"
Write-ColorOutput "  ‚Ä¢ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ: $SkipCopy" "White"
Write-ColorOutput "  ‚Ä¢ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑: $SkipAnalysis" "White"
Write-ColorOutput "  ‚Ä¢ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é: $SkipOptimization" "White"
Write-ColorOutput ""

# ========================================
# –≠–¢–ê–ü 1: –ö–û–ü–ò–†–û–í–ê–ù–ò–ï
# ========================================

if (-not $SkipCopy) {
    Write-ColorOutput "üìÅ –≠–¢–ê–ü 1: –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –£–ü–†–ê–í–õ–Ø–Æ–©–ò–• –§–ê–ô–õ–û–í" "Yellow"
    Write-ColorOutput "=========================================" "Yellow"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø—É—Ç–∏
    if (!(Test-Path $SourcePath)) {
        Write-ColorOutput "‚ùå –û–®–ò–ë–ö–ê: –ò—Å—Ö–æ–¥–Ω—ã–π –ø—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω: $SourcePath" "Red"
        Write-ColorOutput "üí° –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä -SourcePath" "Cyan"
        exit 1
    }
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫
    Write-ColorOutput "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..." "Yellow"
    $Folders = @(
        ".\.automation",
        ".\.manager", 
        ".\.manager\control-files",
        ".\.manager\Completed",
        ".\.manager\prompts",
        ".\.manager\scripts",
        ".\.manager\utils"
    )
    
    foreach ($folder in $Folders) {
        if (!(Test-Path $folder)) {
            try {
                New-Item -ItemType Directory -Path $folder -Force | Out-Null
                Write-ColorOutput "  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: $folder" "Green"
            } catch {
                Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ $folder : $($_.Exception.Message)" "Red"
            }
        }
    }
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .automation
    Write-ColorOutput "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .automation..." "Yellow"
    if (Test-Path "$SourcePath\.automation") {
        try {
            Copy-Item "$SourcePath\.automation\*" ".\.automation\" -Recurse -Force
            Write-ColorOutput "  ‚úÖ .automation —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è .automation : $($_.Exception.Message)" "Red"
        }
    } else {
        Write-ColorOutput "  ‚ö†Ô∏è  .automation –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –ø—É—Ç–∏" "Yellow"
    }
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .manager
    Write-ColorOutput "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .manager..." "Yellow"
    if (Test-Path "$SourcePath\.manager") {
        try {
            Copy-Item "$SourcePath\.manager\*" ".\.manager\" -Recurse -Force
            Write-ColorOutput "  ‚úÖ .manager —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è .manager : $($_.Exception.Message)" "Red"
        }
    } else {
        Write-ColorOutput "  ‚ö†Ô∏è  .manager –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –ø—É—Ç–∏" "Yellow"
    }
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ cursor.json
    Write-ColorOutput "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ cursor.json..." "Yellow"
    if (Test-Path "$SourcePath\cursor.json") {
        try {
            Copy-Item "$SourcePath\cursor.json" "." -Force
            Write-ColorOutput "  ‚úÖ cursor.json —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è cursor.json : $($_.Exception.Message)" "Red"
        }
    } else {
        Write-ColorOutput "  ‚ö†Ô∏è  cursor.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –ø—É—Ç–∏" "Yellow"
    }
    
    Write-ColorOutput "‚úÖ –≠–¢–ê–ü 1 –ó–ê–í–ï–†–®–ï–ù: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ" "Green"
    Write-ColorOutput ""
} else {
    Write-ColorOutput "‚è≠Ô∏è  –≠–¢–ê–ü 1 –ü–†–û–ü–£–©–ï–ù: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ" "Cyan"
    Write-ColorOutput ""
}

# ========================================
# –≠–¢–ê–ü 2: –ò–ù–°–¢–†–£–ö–¶–ò–ò (–ù–ê–°–¢–†–û–ô–ö–ê)
# ========================================

Write-ColorOutput "üìñ –≠–¢–ê–ü 2: –ù–ê–°–¢–†–û–ô–ö–ê –°–ò–°–¢–ï–ú–´" "Yellow"
Write-ColorOutput "=================================" "Yellow"

# –ó–∞–≥—Ä—É–∑–∫–∞ –∞–ª–∏–∞—Å–æ–≤
Write-ColorOutput "üîß –ó–∞–≥—Ä—É–∑–∫–∞ –∞–ª–∏–∞—Å–æ–≤ v4.8..." "Yellow"
$AliasesScript = ".\.automation\scripts\New-Aliases-v4.8.ps1"
if (Test-Path $AliasesScript) {
    try {
        . $AliasesScript
        Write-ColorOutput "  ‚úÖ –ê–ª–∏–∞—Å—ã v4.8 –∑–∞–≥—Ä—É–∂–µ–Ω—ã" "Green"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–∏–∞—Å–æ–≤
        $TestAliases = @("mpo", "mmo", "qai", "qaq", "qap", "qao", "umo", "po")
        $LoadedAliases = 0
        foreach ($alias in $TestAliases) {
            if (Get-Alias $alias -ErrorAction SilentlyContinue) {
                $LoadedAliases++
            }
        }
        Write-ColorOutput "  üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∞–ª–∏–∞—Å–æ–≤: $LoadedAliases –∏–∑ $($TestAliases.Count)" "Cyan"
    } catch {
        Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–ª–∏–∞—Å–æ–≤ : $($_.Exception.Message)" "Red"
    }
} else {
    Write-ColorOutput "  ‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç –∞–ª–∏–∞—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $AliasesScript" "Yellow"
}

# –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
Write-ColorOutput "‚öôÔ∏è  –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã..." "Yellow"
$SetupScript = ".\.automation\Quick-Access-Optimized-v4.8.ps1"
if (Test-Path $SetupScript) {
    try {
        if ($Verbose) {
            pwsh -File $SetupScript -Action setup -Verbose
        } else {
            pwsh -File $SetupScript -Action setup
        }
        Write-ColorOutput "  ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞" "Green"
    } catch {
        Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã : $($_.Exception.Message)" "Red"
    }
} else {
    Write-ColorOutput "  ‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $SetupScript" "Yellow"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
Write-ColorOutput "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..." "Yellow"
$StatusScript = ".\.manager\Universal-Project-Manager-Optimized-v4.8.ps1"
if (Test-Path $StatusScript) {
    try {
        if ($Verbose) {
            pwsh -File $StatusScript -Action status -Verbose
        } else {
            pwsh -File $StatusScript -Action status
        }
        Write-ColorOutput "  ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞" "Green"
    } catch {
        Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã : $($_.Exception.Message)" "Red"
    }
} else {
    Write-ColorOutput "  ‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $StatusScript" "Yellow"
}

Write-ColorOutput "‚úÖ –≠–¢–ê–ü 2 –ó–ê–í–ï–†–®–ï–ù: –ù–∞—Å—Ç—Ä–æ–π–∫–∞" "Green"
Write-ColorOutput ""

# ========================================
# –≠–¢–ê–ü 3: –ê–ù–ê–õ–ò–ó
# ========================================

if (-not $SkipAnalysis) {
    Write-ColorOutput "üîç –≠–¢–ê–ü 3: –ê–ù–ê–õ–ò–ó –ü–†–û–ï–ö–¢–ê" "Yellow"
    Write-ColorOutput "===========================" "Yellow"
    
    # AI-–∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
    Write-ColorOutput "üß† AI-–∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞..." "Yellow"
    $AIAnalysisScript = ".\.automation\Project-Analysis-Optimizer-v4.8.ps1"
    if (Test-Path $AIAnalysisScript) {
        try {
            if ($Verbose) {
                pwsh -File $AIAnalysisScript -Action analyze -AI -Quantum -Detailed -Verbose
            } else {
                pwsh -File $AIAnalysisScript -Action analyze -AI -Quantum -Detailed
            }
            Write-ColorOutput "  ‚úÖ AI-–∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ AI-–∞–Ω–∞–ª–∏–∑–∞ : $($_.Exception.Message)" "Red"
        }
    } else {
        Write-ColorOutput "  ‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç AI-–∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $AIAnalysisScript" "Yellow"
    }
    
    # –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    Write-ColorOutput "üìä –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..." "Yellow"
    if (Test-Path $AIAnalysisScript) {
        try {
            if ($Verbose) {
                pwsh -File $AIAnalysisScript -Action structure -AI -Quantum -Detailed -Verbose
            } else {
                pwsh -File $AIAnalysisScript -Action structure -AI -Quantum -Detailed
            }
            Write-ColorOutput "  ‚úÖ –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã : $($_.Exception.Message)" "Red"
        }
    }
    
    # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    Write-ColorOutput "‚ö° –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..." "Yellow"
    $PerformanceScript = ".\.automation\Performance-Optimizer-v4.8.ps1"
    if (Test-Path $PerformanceScript) {
        try {
            if ($Verbose) {
                pwsh -File $PerformanceScript -Action analyze -Verbose
            } else {
                pwsh -File $PerformanceScript -Action analyze
            }
            Write-ColorOutput "  ‚úÖ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ : $($_.Exception.Message)" "Red"
        }
    } else {
        Write-ColorOutput "  ‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $PerformanceScript" "Yellow"
    }
    
    Write-ColorOutput "‚úÖ –≠–¢–ê–ü 3 –ó–ê–í–ï–†–®–ï–ù: –ê–Ω–∞–ª–∏–∑" "Green"
    Write-ColorOutput ""
} else {
    Write-ColorOutput "‚è≠Ô∏è  –≠–¢–ê–ü 3 –ü–†–û–ü–£–©–ï–ù: –ê–Ω–∞–ª–∏–∑" "Cyan"
    Write-ColorOutput ""
}

# ========================================
# –≠–¢–ê–ü 4: –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø
# ========================================

if (-not $SkipOptimization) {
    Write-ColorOutput "‚ö° –≠–¢–ê–ü 4: –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´" "Yellow"
    Write-ColorOutput "=================================" "Yellow"
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    Write-ColorOutput "üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..." "Yellow"
    $MaxPerfScript = ".\.automation\Maximum-Performance-Optimizer-v4.8.ps1"
    if (Test-Path $MaxPerfScript) {
        try {
            if ($Verbose) {
                pwsh -File $MaxPerfScript -Action optimize -AI -Quantum -Verbose
            } else {
                pwsh -File $MaxPerfScript -Action optimize -AI -Quantum
            }
            Write-ColorOutput "  ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ : $($_.Exception.Message)" "Red"
        }
    } else {
        Write-ColorOutput "  ‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $MaxPerfScript" "Yellow"
    }
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    Write-ColorOutput "üéØ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞..." "Yellow"
    $ManagerOptScript = ".\.manager\Maximum-Manager-Optimizer-v4.8.ps1"
    if (Test-Path $ManagerOptScript) {
        try {
            if ($Verbose) {
                pwsh -File $ManagerOptScript -Action optimize -AI -Quantum -Verbose
            } else {
                pwsh -File $ManagerOptScript -Action optimize -AI -Quantum
            }
            Write-ColorOutput "  ‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ : $($_.Exception.Message)" "Red"
        }
    } else {
        Write-ColorOutput "  ‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $ManagerOptScript" "Yellow"
    }
    
    # –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
    Write-ColorOutput "üîß –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º..." "Yellow"
    if (Test-Path $PerformanceScript) {
        try {
            if ($Verbose) {
                pwsh -File $PerformanceScript -Action all -Verbose -Force
            } else {
                pwsh -File $PerformanceScript -Action all -Force
            }
            Write-ColorOutput "  ‚úÖ –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞" "Green"
        } catch {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ : $($_.Exception.Message)" "Red"
        }
    }
    
    Write-ColorOutput "‚úÖ –≠–¢–ê–ü 4 –ó–ê–í–ï–†–®–ï–ù: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è" "Green"
    Write-ColorOutput ""
} else {
    Write-ColorOutput "‚è≠Ô∏è  –≠–¢–ê–ü 4 –ü–†–û–ü–£–©–ï–ù: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è" "Cyan"
    Write-ColorOutput ""
}

# ========================================
# –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
# ========================================

Write-ColorOutput "üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´" "Yellow"
Write-ColorOutput "=================================" "Yellow"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
Write-ColorOutput "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫..." "Yellow"
$CriticalPaths = @(
    ".\.automation",
    ".\.manager",
    ".\.manager\control-files"
)

$AllPathsExist = $true
foreach ($path in $CriticalPaths) {
    if (Test-Path $path) {
        Write-ColorOutput "  ‚úÖ $path" "Green"
    } else {
        Write-ColorOutput "  ‚ùå $path" "Red"
        $AllPathsExist = $false
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
Write-ColorOutput "üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤..." "Yellow"
$CriticalFiles = @(
    ".\.automation\Maximum-Performance-Optimizer-v4.8.ps1",
    ".\.manager\start.md",
    ".\.manager\control-files\INSTRUCTIONS-v4.4.md",
    ".\cursor.json"
)

$AllFilesExist = $true
foreach ($file in $CriticalFiles) {
    if (Test-Path $file) {
        Write-ColorOutput "  ‚úÖ $file" "Green"
    } else {
        Write-ColorOutput "  ‚ùå $file" "Red"
        $AllFilesExist = $false
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–∏–∞—Å–æ–≤
Write-ColorOutput "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–∏–∞—Å–æ–≤..." "Yellow"
$TestAliases = @("mpo", "mmo", "qai", "qaq", "qap", "qao", "umo", "po")
$WorkingAliases = 0
foreach ($alias in $TestAliases) {
    if (Get-Alias $alias -ErrorAction SilentlyContinue) {
        Write-ColorOutput "  ‚úÖ $alias" "Green"
        $WorkingAliases++
    } else {
        Write-ColorOutput "  ‚ùå $alias" "Red"
    }
}

# ========================================
# –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
# ========================================

Write-ColorOutput ""
Write-ColorOutput "üéâ ========================================" "Green"
Write-ColorOutput "üéâ  –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ –ó–ê–í–ï–†–®–ï–ù!" "Green"
Write-ColorOutput "üéâ ========================================" "Green"
Write-ColorOutput ""

Write-ColorOutput "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:" "Cyan"
Write-ColorOutput "  ‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫: $(if($AllPathsExist){'‚úÖ –ì–æ—Ç–æ–≤–æ'}else{'‚ùå –û—à–∏–±–∫–∏'})" "White"
Write-ColorOutput "  ‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã: $(if($AllFilesExist){'‚úÖ –ì–æ—Ç–æ–≤–æ'}else{'‚ùå –û—à–∏–±–∫–∏'})" "White"
Write-ColorOutput "  ‚Ä¢ –†–∞–±–æ—á–∏—Ö –∞–ª–∏–∞—Å–æ–≤: $WorkingAliases –∏–∑ $($TestAliases.Count)" "White"
Write-ColorOutput ""

Write-ColorOutput "üöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!" "Green"
Write-ColorOutput ""

Write-ColorOutput "üìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:" "Cyan"
Write-ColorOutput "  1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª–∏–∞—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–∞–±–æ—Ç—ã:" "White"
Write-ColorOutput "     ‚Ä¢ mpo - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è" "White"
Write-ColorOutput "     ‚Ä¢ qai - AI-–∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞" "White"
Write-ColorOutput "     ‚Ä¢ qas - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã" "White"
Write-ColorOutput "     ‚Ä¢ qam - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏" "White"
Write-ColorOutput ""
Write-ColorOutput "  2. –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:" "White"
Write-ColorOutput "     ‚Ä¢ –£—Ç—Ä–æ–º: qas -Detailed" "White"
Write-ColorOutput "     ‚Ä¢ –í —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è: qai -Action analyze" "White"
Write-ColorOutput "     ‚Ä¢ –í–µ—á–µ—Ä–æ–º: mpo -Action optimize" "White"
Write-ColorOutput ""

Write-ColorOutput "üìö –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø:" "Cyan"
Write-ColorOutput "  ‚Ä¢ .\WORKFLOW-GUIDE-v4.8.md - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ" "White"
Write-ColorOutput "  ‚Ä¢ .\WORKFLOW-SCHEMA-v4.8.md - –°—Ö–µ–º–∞ —Ä–∞–±–æ—Ç—ã" "White"
Write-ColorOutput "  ‚Ä¢ .\.manager\start.md - –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã" "White"
Write-ColorOutput ""

Write-ColorOutput "üéØ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º v4.8 –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!" "Green"
Write-ColorOutput ""

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –±—ã—Å—Ç—Ä–æ–º —Å—Ç–∞—Ä—Ç–µ
$ReportContent = @"
# üöÄ –û—Ç—á–µ—Ç –æ –±—ã—Å—Ç—Ä–æ–º —Å—Ç–∞—Ä—Ç–µ —Å–∏—Å—Ç–µ–º—ã v4.8

**–î–∞—Ç–∞:** $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
**–ü—Ä–æ–µ–∫—Ç:** $ProjectName
**–ò—Å—Ö–æ–¥–Ω—ã–π –ø—É—Ç—å:** $SourcePath

## üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã

- **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫:** $(if($AllPathsExist){'‚úÖ –ì–æ—Ç–æ–≤–æ'}else{'‚ùå –û—à–∏–±–∫–∏'})
- **–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã:** $(if($AllFilesExist){'‚úÖ –ì–æ—Ç–æ–≤–æ'}else{'‚ùå –û—à–∏–±–∫–∏'})
- **–†–∞–±–æ—á–∏—Ö –∞–ª–∏–∞—Å–æ–≤:** $WorkingAliases –∏–∑ $($TestAliases.Count)

## üéØ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!

### –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã:
- `mpo` - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
- `qai` - AI-–∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
- `qas` - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
- `qam` - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

### –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
- –£—Ç—Ä–æ–º: `qas -Detailed`
- –í —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è: `qai -Action analyze`
- –í–µ—á–µ—Ä–æ–º: `mpo -Action optimize`
"@

try {
    $ReportContent | Out-File -FilePath ".\QUICK-START-REPORT.md" -Encoding UTF8
    Write-ColorOutput "üìÑ –°–æ–∑–¥–∞–Ω –æ—Ç—á–µ—Ç: .\QUICK-START-REPORT.md" "Cyan"
} catch {
    Write-ColorOutput "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç: $($_.Exception.Message)" "Yellow"
}

Write-ColorOutput ""
Write-ColorOutput "üéâ –£–¥–∞—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π v4.8!" "Cyan"
