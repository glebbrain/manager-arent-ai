# deploy-prod-v4.8.ps1 - –î–µ–ø–ª–æ–π –ø—Ä–æ–µ–∫—Ç–∞ –≤ PROD —Å—Ä–µ–¥—É v4.8
# –°–æ–∑–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤ tar –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ

param(
    [Parameter(Mandatory=$true)]
    [string]$ProjectName,
    [string]$PROM_PATH = "",
    [string]$Server = "",
    [string]$PROD_PATH = "",
    [string]$ArchivePath = "",
    [switch]$Force = $false,
    [switch]$Backup = $true,
    [switch]$Verbose = $false,
    [switch]$Clean = $false,
    [switch]$TestOnly = $false
)

# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
Import-Module -Name ".\automation\config\DeploymentConfig.psm1" -Force

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if ([string]::IsNullOrEmpty($PROM_PATH)) {
    $PROM_PATH = Get-EnvironmentPath -Environment "prom"
    if ([string]::IsNullOrEmpty($PROM_PATH)) {
        Write-Host "‚ùå –û–®–ò–ë–ö–ê: PROM_PATH –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" -ForegroundColor Red
        exit 1
    }
}

if ([string]::IsNullOrEmpty($Server)) {
    $Server = Get-EnvironmentServer -Environment "prod"
    if ([string]::IsNullOrEmpty($Server)) {
        Write-Host "‚ùå –û–®–ò–ë–ö–ê: Server –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" -ForegroundColor Red
        exit 1
    }
}

if ([string]::IsNullOrEmpty($PROD_PATH)) {
    $PROD_PATH = Get-EnvironmentPath -Environment "prod"
    if ([string]::IsNullOrEmpty($PROD_PATH)) {
        Write-Host "‚ùå –û–®–ò–ë–ö–ê: PROD_PATH –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏" -ForegroundColor Red
        exit 1
    }
}

if ([string]::IsNullOrEmpty($ArchivePath)) {
    $ArchivePath = Get-ArchivePath
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
$ErrorActionPreference = "Continue"
$ProgressPreference = "SilentlyContinue"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function Write-Log {
    param([string]$Message, [string]$Level = "INFO")
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $logMessage = "[$timestamp] [$Level] $Message"
    Write-ColorOutput $logMessage
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
Write-ColorOutput "üöÄ ========================================" "Cyan"
Write-ColorOutput "üöÄ  –î–ï–ü–õ–û–ô –í PROD –°–†–ï–î–£ v4.8" "Cyan"
Write-ColorOutput "üöÄ ========================================" "Cyan"
Write-ColorOutput ""

Write-ColorOutput "üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:" "Yellow"
Write-ColorOutput "  ‚Ä¢ –ü—Ä–æ–µ–∫—Ç: $ProjectName" "White"
Write-ColorOutput "  ‚Ä¢ PROM –ø—É—Ç—å: $PROM_PATH" "White"
Write-ColorOutput "  ‚Ä¢ –°–µ—Ä–≤–µ—Ä: $Server" "White"
Write-ColorOutput "  ‚Ä¢ PROD –ø—É—Ç—å: $PROD_PATH" "White"
Write-ColorOutput "  ‚Ä¢ –ê—Ä—Ö–∏–≤: $ArchivePath" "White"
Write-ColorOutput "  ‚Ä¢ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ: $Force" "White"
Write-ColorOutput "  ‚Ä¢ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $Backup" "White"
Write-ColorOutput "  ‚Ä¢ –û—á–∏—Å—Ç–∫–∞: $Clean" "White"
Write-ColorOutput "  ‚Ä¢ –¢–æ–ª—å–∫–æ —Ç–µ—Å—Ç: $TestOnly" "White"
Write-ColorOutput ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PROM –ø—É—Ç–∏
Write-ColorOutput "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PROM –ø—É—Ç–∏..." "Yellow"
$PROMProjectPath = Join-Path $PROM_PATH $ProjectName
if (!(Test-Path $PROMProjectPath)) {
    Write-ColorOutput "‚ùå –û–®–ò–ë–ö–ê: PROM –ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: $PROMProjectPath" "Red"
    Write-ColorOutput "üí° –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–µ–ø–ª–æ–π –≤ PROM: .\deploy-prom-v4.8.ps1 -ProjectName `"$ProjectName`"" "Cyan"
    exit 1
}
Write-ColorOutput "‚úÖ PROM –ø—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω: $PROMProjectPath" "Green"

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –∞—Ä—Ö–∏–≤–æ–≤
Write-ColorOutput "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –∞—Ä—Ö–∏–≤–æ–≤..." "Yellow"
if (!(Test-Path $ArchivePath)) {
    try {
        New-Item -ItemType Directory -Path $ArchivePath -Force | Out-Null
        Write-ColorOutput "‚úÖ –ü–∞–ø–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: $ArchivePath" "Green"
    } catch {
        Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ –∞—Ä—Ö–∏–≤–æ–≤: $($_.Exception.Message)" "Red"
        exit 1
    }
} else {
    Write-ColorOutput "‚úÖ –ü–∞–ø–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $ArchivePath" "Green"
}

# –¢–µ—Å—Ç SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
Write-ColorOutput "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..." "Yellow"
try {
    $sshTest = ssh -o ConnectTimeout=10 -o BatchMode=yes $Server "echo 'SSH connection test successful'" 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-ColorOutput "‚úÖ SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ" "Green"
    } else {
        Write-ColorOutput "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $Server" "Red"
        Write-ColorOutput "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SSH –∫–ª—é—á–∏ –∏ –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É" "Cyan"
        Write-ColorOutput "üîß SSH —Ç–µ—Å—Ç: $sshTest" "Yellow"
        exit 1
    }
} catch {
    Write-ColorOutput "‚ùå –û–®–ò–ë–ö–ê: –û—à–∏–±–∫–∞ SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: $($_.Exception.Message)" "Red"
    exit 1
}

# –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç - –≤—ã—Ö–æ–¥–∏–º
if ($TestOnly) {
    Write-ColorOutput "‚úÖ –¢–µ—Å—Ç SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–µ–Ω. –í—ã—Ö–æ–¥." "Green"
    exit 0
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ tar
Write-ColorOutput "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ tar..." "Yellow"
$ArchiveFile = Join-Path $ArchivePath "$ProjectName-prod-$(Get-Date -Format 'yyyy-MM-dd-HH-mm-ss').tar"
$ArchiveFileGz = "$ArchiveFile.gz"

try {
    # –°–æ–∑–¥–∞–Ω–∏–µ tar –∞—Ä—Ö–∏–≤–∞ –∏–∑ PROM –ø—Ä–æ–µ–∫—Ç–∞
    Write-ColorOutput "  üìã –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ PROM..." "Yellow"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º PowerShell –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è tar (Windows 10+)
    if ($PSVersionTable.PSVersion.Major -ge 5) {
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏
        $TempFileList = Join-Path $env:TEMP "tar-files-prod-$ProjectName.txt"
        
        # –ò—Å–∫–ª—é—á–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã
        $ExcludePatterns = @(
            "node_modules",
            ".git",
            ".vs",
            "bin",
            "obj",
            "dist",
            "build",
            "*.log",
            "*.tmp",
            ".DS_Store",
            "Thumbs.db",
            "deploy-archives"
        )
        
        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏
        Get-ChildItem -Path $PROMProjectPath -Recurse | Where-Object {
            $item = $_
            $shouldExclude = $false
            foreach ($pattern in $ExcludePatterns) {
                if ($item.Name -like $pattern -or $item.FullName -like "*\$pattern\*") {
                    $shouldExclude = $true
                    break
                }
            }
            return -not $shouldExclude
        } | ForEach-Object { $_.FullName } | Out-File -FilePath $TempFileList -Encoding UTF8
        
        # –°–æ–∑–¥–∞–µ–º tar –∞—Ä—Ö–∏–≤
        tar -cf $ArchiveFile -T $TempFileList
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        Remove-Item $TempFileList -Force -ErrorAction SilentlyContinue
        
        Write-ColorOutput "  ‚úÖ Tar –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $ArchiveFile" "Green"
    } else {
        Write-ColorOutput "  ‚ö†Ô∏è  PowerShell –≤–µ—Ä—Å–∏–∏ 5+ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è tar –∞—Ä—Ö–∏–≤–æ–≤" "Yellow"
        Write-ColorOutput "  üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ SCP..." "Yellow"
        
        # –ü—Ä–æ—Å—Ç–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ SCP
        Write-ColorOutput "  üì§ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..." "Yellow"
        scp -r $PROMProjectPath $Server`:$PROD_PATH/
        if ($LASTEXITCODE -eq 0) {
            Write-ColorOutput "  ‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä" "Green"
        } else {
            Write-ColorOutput "  ‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä" "Red"
            exit 1
        }
        Write-ColorOutput "‚úÖ –î–ï–ü–õ–û–ô –í PROD –ó–ê–í–ï–†–®–ï–ù" "Green"
        exit 0
    }
    
    # –°–∂–∞—Ç–∏–µ –∞—Ä—Ö–∏–≤–∞
    Write-ColorOutput "  üì¶ –°–∂–∞—Ç–∏–µ –∞—Ä—Ö–∏–≤–∞..." "Yellow"
    try {
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º gzip –¥–ª—è —Å–∂–∞—Ç–∏—è
        gzip $ArchiveFile
        $ArchiveFile = $ArchiveFileGz
        Write-ColorOutput "  ‚úÖ –ê—Ä—Ö–∏–≤ —Å–∂–∞—Ç: $ArchiveFile" "Green"
    } catch {
        Write-ColorOutput "  ‚ö†Ô∏è  gzip –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Å–∂–∞—Ç—ã–π –∞—Ä—Ö–∏–≤" "Yellow"
    }
    
} catch {
    Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞: $($_.Exception.Message)" "Red"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –∞—Ä—Ö–∏–≤–∞
if (Test-Path $ArchiveFile) {
    $ArchiveSize = (Get-Item $ArchiveFile).Length
    $ArchiveSizeMB = [math]::Round($ArchiveSize / 1MB, 2)
    Write-ColorOutput "üìä –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: $ArchiveSizeMB MB" "Cyan"
} else {
    Write-ColorOutput "‚ùå –û–®–ò–ë–ö–ê: –ê—Ä—Ö–∏–≤ –Ω–µ —Å–æ–∑–¥–∞–Ω" "Red"
    exit 1
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
Write-ColorOutput "üì§ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..." "Yellow"
try {
    scp $ArchiveFile $Server`:/tmp/
    if ($LASTEXITCODE -eq 0) {
        Write-ColorOutput "‚úÖ –ê—Ä—Ö–∏–≤ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä" "Green"
    } else {
        Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä" "Red"
        exit 1
    }
} catch {
    Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ SCP: $($_.Exception.Message)" "Red"
    exit 1
}

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
Write-ColorOutput "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..." "Yellow"
$RemoteArchiveName = Split-Path $ArchiveFile -Leaf
$RemoteArchivePath = "/tmp/$RemoteArchiveName"
$RemoteProjectPath = "$PROD_PATH/$ProjectName"

# SSH –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
$SSHCommands = @"
# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if [ -d "$RemoteProjectPath" ]; then
    if [ "$Backup" = "true" ]; then
        echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
        cp -r "$RemoteProjectPath" "$RemoteProjectPath.backup.$(date +%Y-%m-%d-%H-%M-%S)"
        echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞"
    fi
    
    echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –¥–µ–ø–ª–æ—è..."
    rm -rf "$RemoteProjectPath"
    echo "‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–µ–ø–ª–æ–π —É–¥–∞–ª–µ–Ω"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π –ø–∞–ø–∫–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–π –ø–∞–ø–∫–∏..."
mkdir -p "$RemoteProjectPath"
echo "‚úÖ –¶–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: $RemoteProjectPath"

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
echo "üì¶ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞..."
if [[ "$RemoteArchiveName" == *.gz ]]; then
    # –°–Ω–∞—á–∞–ª–∞ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º gzip
    gunzip -c "$RemoteArchivePath" | tar -xf - -C "$RemoteProjectPath"
else
    # –û–±—ã—á–Ω—ã–π tar
    tar -xf "$RemoteArchivePath" -C "$RemoteProjectPath"
fi
echo "‚úÖ –ê—Ä—Ö–∏–≤ –∏–∑–≤–ª–µ—á–µ–Ω –≤: $RemoteProjectPath"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
echo "üîê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chmod -R 755 "$RemoteProjectPath"
chown -R u0488409:u0488409 "$RemoteProjectPath"
echo "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞..."
rm -f "$RemoteArchivePath"
echo "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤ —É–¥–∞–ª–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."
FILE_COUNT=$(find "$RemoteProjectPath" -type f | wc -l)
echo "üìä –†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ —Ñ–∞–π–ª–æ–≤: $FILE_COUNT"

echo "‚úÖ –î–µ–ø–ª–æ–π –≤ PROD –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
"@

try {
    Write-ColorOutput "  üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..." "Yellow"
    $SSHResult = ssh $Server $SSHCommands
    Write-ColorOutput "  ‚úÖ –ö–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ" "Green"
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    Write-ColorOutput "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:" "Cyan"
    Write-ColorOutput $SSHResult "White"
    
} catch {
    Write-ColorOutput "‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: $($_.Exception.Message)" "Red"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
Write-ColorOutput "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..." "Yellow"
try {
    $CheckResult = ssh $Server "ls -la $RemoteProjectPath | head -10"
    Write-ColorOutput "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ PROD –ø–∞–ø–∫–∏:" "Cyan"
    Write-ColorOutput $CheckResult "White"
} catch {
    Write-ColorOutput "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ PROD –ø–∞–ø–∫–∏" "Yellow"
}

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∞—Ä—Ö–∏–≤–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
if ($Clean) {
    Write-ColorOutput "üßπ –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∞—Ä—Ö–∏–≤–æ–≤..." "Yellow"
    try {
        $OldArchives = Get-ChildItem -Path $ArchivePath -Filter "$ProjectName-prod-*.tar*" | Sort-Object LastWriteTime -Descending | Select-Object -Skip 3
        foreach ($oldArchive in $OldArchives) {
            Remove-Item $oldArchive.FullName -Force
            Write-ColorOutput "  üóëÔ∏è  –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –∞—Ä—Ö–∏–≤: $($oldArchive.Name)" "Yellow"
        }
        Write-ColorOutput "  ‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞" "Green"
    } catch {
        Write-ColorOutput "  ‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –∞—Ä—Ö–∏–≤—ã: $($_.Exception.Message)" "Yellow"
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –¥–µ–ø–ª–æ–µ
Write-ColorOutput "üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –¥–µ–ø–ª–æ–µ..." "Yellow"
$ReportContent = @"
# üöÄ –û—Ç—á–µ—Ç –æ –¥–µ–ø–ª–æ–µ –≤ PROD —Å—Ä–µ–¥—É

**–î–∞—Ç–∞:** $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
**–ü—Ä–æ–µ–∫—Ç:** $ProjectName
**PROM –ø—É—Ç—å:** $PROMProjectPath
**–°–µ—Ä–≤–µ—Ä:** $Server
**PROD –ø—É—Ç—å:** $RemoteProjectPath
**–ê—Ä—Ö–∏–≤:** $ArchiveFile

## üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã

- **–°—Ç–∞—Ç—É—Å:** ‚úÖ –£—Å–ø–µ—à–Ω–æ
- **–†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞:** $ArchiveSizeMB MB
- **–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è:** $(if($Backup){'‚úÖ –°–æ–∑–¥–∞–Ω–∞'}else{'‚ùå –ù–µ —Å–æ–∑–¥–∞–Ω–∞'})

## üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏

1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
3. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

## üìÅ –§–∞–π–ª—ã

- **PROD –ø—É—Ç—å:** $RemoteProjectPath
- **–ê—Ä—Ö–∏–≤:** $ArchiveFile
- **–°–µ—Ä–≤–µ—Ä:** $Server
"@

try {
    $ReportFile = Join-Path $ArchivePath "deploy-prod-report-$ProjectName-$(Get-Date -Format 'yyyy-MM-dd-HH-mm-ss').md"
    $ReportContent | Out-File -FilePath $ReportFile -Encoding UTF8
    Write-ColorOutput "  ‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: $ReportFile" "Green"
} catch {
    Write-ColorOutput "  ‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç: $($_.Exception.Message)" "Yellow"
}

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
Write-ColorOutput ""
Write-ColorOutput "üéâ ========================================" "Green"
Write-ColorOutput "üéâ  –î–ï–ü–õ–û–ô –í PROD –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!" "Green"
Write-ColorOutput "üéâ ========================================" "Green"
Write-ColorOutput ""

Write-ColorOutput "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:" "Cyan"
Write-ColorOutput "  ‚Ä¢ –ü—Ä–æ–µ–∫—Ç: $ProjectName" "White"
Write-ColorOutput "  ‚Ä¢ –°–µ—Ä–≤–µ—Ä: $Server" "White"
Write-ColorOutput "  ‚Ä¢ PROD –ø—É—Ç—å: $RemoteProjectPath" "White"
Write-ColorOutput "  ‚Ä¢ –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: $ArchiveSizeMB MB" "White"
Write-ColorOutput "  ‚Ä¢ –ê—Ä—Ö–∏–≤: $ArchiveFile" "White"
Write-ColorOutput ""

Write-ColorOutput "üìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:" "Cyan"
Write-ColorOutput "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ" "White"
Write-ColorOutput "  2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å" "White"
Write-ColorOutput "  3. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" "White"
Write-ColorOutput "  4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–ª–µ—Ä—Ç—ã" "White"
Write-ColorOutput ""

Write-ColorOutput "üéØ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ PROD —Å—Ä–µ–¥–µ!" "Green"
Write-ColorOutput ""
