apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-enhanced
  namespace: manager-agent-ai
  labels:
    app: api-gateway-enhanced
    version: "2.9"
    ai-enhanced: "true"
    component: "api-gateway"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: api-gateway-enhanced
  template:
    metadata:
      labels:
        app: api-gateway-enhanced
        version: "2.9"
        ai-enhanced: "true"
        component: "api-gateway"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: api-gateway-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: api-gateway
        image: manager-agent-ai/api-gateway-enhanced:2.9.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: NODE_ENV
        - name: AI_ENABLED
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: AI_ENABLED
        - name: PERFORMANCE_MONITORING
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: PERFORMANCE_MONITORING
        - name: SECURITY_ENABLED
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: SECURITY_ENABLED
        - name: MONITORING_ENABLED
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: MONITORING_ENABLED
        - name: AUTO_SCALING_ENABLED
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: AUTO_SCALING_ENABLED
        - name: COST_OPTIMIZATION_ENABLED
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: COST_OPTIMIZATION_ENABLED
        - name: COMPLIANCE_ENABLED
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: COMPLIANCE_ENABLED
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: manager-agent-ai-secrets
              key: jwt-secret
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: REDIS_URL
        - name: PROMETHEUS_URL
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: PROMETHEUS_URL
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "2Gi"
            cpu: "2000m"
            ephemeral-storage: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/instance-type: "m5.large"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - api-gateway-enhanced
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: In
                values:
                - "m5.large"
                - "m5.xlarge"
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-enhanced-service
  namespace: manager-agent-ai
  labels:
    app: api-gateway-enhanced
    version: "2.9"
    ai-enhanced: "true"
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
spec:
  selector:
    app: api-gateway-enhanced
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: LoadBalancer
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway-sa
  namespace: manager-agent-ai
  labels:
    app: api-gateway-enhanced
    version: "2.9"
    ai-enhanced: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: api-gateway-role
  namespace: manager-agent-ai
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: api-gateway-rolebinding
  namespace: manager-agent-ai
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-gateway-role
subjects:
- kind: ServiceAccount
  name: api-gateway-sa
  namespace: manager-agent-ai
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: manager-agent-ai
  labels:
    app: api-gateway-enhanced
    version: "2.9"
    ai-enhanced: "true"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway-enhanced
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: manager-agent-ai
  labels:
    app: api-gateway-enhanced
    version: "2.9"
    ai-enhanced: "true"
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: api-gateway-enhanced
