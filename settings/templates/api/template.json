{
  "template": {
    "name": "API Service Template",
    "version": "1.0.0",
    "description": "Universal template for REST API services",
    "type": "api",
    "category": "backend",
    "tags": ["nodejs", "express", "typescript", "mongodb", "jwt", "swagger"],
    "author": "ManagerAgentAI",
    "created": "2025-01-31",
    "lastUpdated": "2025-01-31"
  },
  "structure": {
    "directories": [
      "src",
      "src/controllers",
      "src/models",
      "src/routes",
      "src/middleware",
      "src/services",
      "src/utils",
      "src/types",
      "src/validators",
      "src/config",
      "tests",
      "tests/unit",
      "tests/integration",
      "tests/e2e",
      "docs",
      "scripts",
      "migrations",
      "logs"
    ],
    "files": [
      "package.json",
      "tsconfig.json",
      ".env.example",
      ".gitignore",
      "README.md",
      "src/app.ts",
      "src/server.ts",
      "src/controllers/userController.ts",
      "src/controllers/authController.ts",
      "src/models/User.ts",
      "src/models/BaseModel.ts",
      "src/routes/index.ts",
      "src/routes/userRoutes.ts",
      "src/routes/authRoutes.ts",
      "src/middleware/auth.ts",
      "src/middleware/validation.ts",
      "src/middleware/errorHandler.ts",
      "src/services/userService.ts",
      "src/services/authService.ts",
      "src/utils/logger.ts",
      "src/utils/response.ts",
      "src/types/index.ts",
      "src/validators/userValidator.ts",
      "src/config/database.ts",
      "src/config/jwt.ts",
      "tests/setup.ts",
      "tests/user.test.ts",
      "tests/auth.test.ts",
      "docs/API.md",
      "docs/SWAGGER.md",
      "scripts/seed.js",
      "scripts/migrate.js",
      "migrations/001_create_users.js",
      "logs/README.md"
    ]
  },
  "dependencies": {
    "production": [
      "express",
      "typescript",
      "@types/express",
      "@types/node",
      "cors",
      "helmet",
      "morgan",
      "mongoose",
      "jsonwebtoken",
      "@types/jsonwebtoken",
      "bcryptjs",
      "@types/bcryptjs",
      "joi",
      "dotenv",
      "compression",
      "express-rate-limit",
      "swagger-ui-express",
      "swagger-jsdoc"
    ],
    "development": [
      "jest",
      "@types/jest",
      "supertest",
      "@types/supertest",
      "ts-jest",
      "nodemon",
      "ts-node",
      "eslint",
      "@typescript-eslint/parser",
      "@typescript-eslint/eslint-plugin",
      "prettier",
      "husky",
      "lint-staged"
    ]
  },
  "scripts": {
    "dev": "nodemon src/server.ts",
    "build": "tsc",
    "start": "node dist/server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "format": "prettier --write src/**/*.ts",
    "seed": "node scripts/seed.js",
    "migrate": "node scripts/migrate.js"
  },
  "configuration": {
    "port": 3000,
    "database": "mongodb://localhost:27017/api",
    "jwt_secret": "your-secret-key",
    "jwt_expires": "24h",
    "rate_limit": "100",
    "cors_origin": "*",
    "environment": "development"
  },
  "features": {
    "authentication": true,
    "authorization": true,
    "validation": true,
    "error_handling": true,
    "logging": true,
    "rate_limiting": true,
    "cors": true,
    "compression": true,
    "swagger": true,
    "testing": true,
    "linting": true,
    "formatting": true,
    "migrations": true,
    "seeding": true,
    "typescript": true,
    "mongodb": true,
    "jwt": true
  }
}
