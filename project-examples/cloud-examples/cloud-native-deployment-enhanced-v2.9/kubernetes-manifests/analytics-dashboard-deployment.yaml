apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-dashboard-enhanced
  namespace: manager-agent-ai-v2.9
  labels:
    app: analytics-dashboard-enhanced
    version: "2.9.0"
    component: analytics
    tier: frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: analytics-dashboard-enhanced
  template:
    metadata:
      labels:
        app: analytics-dashboard-enhanced
        version: "2.9.0"
        component: analytics
        tier: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: manager-agent-ai-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: analytics-dashboard-enhanced
        image: manager-agent-ai/analytics-dashboard-enhanced:2.9.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3001
          protocol: TCP
        - name: websocket
          containerPort: 3002
          protocol: TCP
        - name: metrics
          containerPort: 9091
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: NODE_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: LOG_LEVEL
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: ANALYTICS_PORT
        - name: WEBSOCKET_ENABLED
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: ANALYTICS_WEBSOCKET_ENABLED
        - name: REAL_TIME_ENABLED
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: ANALYTICS_REAL_TIME_ENABLED
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: manager-agent-ai-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: manager-agent-ai-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
            ephemeral-storage: "2Gi"
          limits:
            memory: "2Gi"
            cpu: "1000m"
            ephemeral-storage: "4Gi"
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
        - name: data-volume
          mountPath: /app/data
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config-volume
        configMap:
          name: manager-agent-ai-config
      - name: logs-volume
        emptyDir: {}
      - name: data-volume
        persistentVolumeClaim:
          claimName: analytics-dashboard-pvc
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - analytics-dashboard-enhanced
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: analytics-dashboard-service
  namespace: manager-agent-ai-v2.9
  labels:
    app: analytics-dashboard-enhanced
    version: "2.9.0"
    component: analytics
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: websocket
    port: 3002
    targetPort: websocket
    protocol: TCP
  - name: metrics
    port: 9091
    targetPort: metrics
    protocol: TCP
  selector:
    app: analytics-dashboard-enhanced
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: analytics-dashboard-pvc
  namespace: manager-agent-ai-v2.9
  labels:
    app: analytics-dashboard-enhanced
    version: "2.9.0"
    component: analytics
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: analytics-dashboard-hpa
  namespace: manager-agent-ai-v2.9
  labels:
    app: analytics-dashboard-enhanced
    version: "2.9.0"
    component: analytics
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: analytics-dashboard-enhanced
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Max
