version: '3.8'

services:
  edge-computing-enhanced:
    build: .
    container_name: edge-computing-enhanced-v3.1
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - PORT=3000
      - HOST=0.0.0.0
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
    networks:
      - edge-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: edge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - edge-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  mongodb:
    image: mongo:6
    container_name: edge-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=edge_computing
    volumes:
      - mongodb_data:/data/db
    networks:
      - edge-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: edge-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - edge-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: edge-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - edge-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: edge-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - edge-network
    restart: unless-stopped
    depends_on:
      - edge-computing-enhanced

networks:
  edge-network:
    driver: bridge

volumes:
  redis_data:
  mongodb_data:
  prometheus_data:
  grafana_data:
