version: '3.8'

services:
  advanced-automation:
    build: .
    container_name: advanced-automation-v3.1
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      
      # Self-Healing Configuration
      - SELF_HEALING_ENABLED=true
      - HEALTH_CHECK_INTERVAL=5000
      - AUTO_RECOVERY_ENABLED=true
      - AUTO_SCALING_ENABLED=true
      
      # Predictive Maintenance Configuration
      - PREDICTIVE_MAINTENANCE_ENABLED=true
      - MODEL_PATH=./models/maintenance
      - PREDICTION_INTERVAL=3600000
      - MAINTENANCE_THRESHOLD=0.8
      
      # Autonomous Operations Configuration
      - AUTONOMOUS_OPERATIONS_ENABLED=true
      - DECISION_ENGINE=ai
      - RESOURCE_MANAGEMENT_ENABLED=true
      - LEARNING_ENABLED=true
      
      # Intelligent Workflows Configuration
      - INTELLIGENT_WORKFLOWS_ENABLED=true
      - OPTIMIZATION_ENABLED=true
      - DYNAMIC_ADJUSTMENT_ENABLED=true
      - ORCHESTRATION_ENABLED=true
      
      # Adaptive Automation Configuration
      - ADAPTIVE_AUTOMATION_ENABLED=true
      - ENVIRONMENT_ADAPTATION_ENABLED=true
      - LEARNING_CAPABILITIES_ENABLED=true
      - FLEXIBLE_CONFIGURATION_ENABLED=true
      
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
    networks:
      - automation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: automation-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - automation-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  mongodb:
    image: mongo:6
    container_name: automation-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=automation
    volumes:
      - mongodb-data:/data/db
    networks:
      - automation-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: automation-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - advanced-automation
    networks:
      - automation-network
    restart: unless-stopped

volumes:
  redis-data:
  mongodb-data:

networks:
  automation-network:
    driver: bridge
