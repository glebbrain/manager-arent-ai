version: '3.8'

services:
  advanced-security:
    build: .
    container_name: advanced-security-v3.1
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      
      # Zero-Trust Configuration
      - ZERO_TRUST_ENABLED=true
      - IDENTITY_PROVIDER=oidc
      - ACCESS_POLICY=dynamic
      - MONITORING_INTERVAL=5000
      - RISK_THRESHOLD=0.7
      
      # AI Threat Detection Configuration
      - AI_THREAT_DETECTION_ENABLED=true
      - MODEL_PATH=./models/threat-detection
      - CONFIDENCE_THRESHOLD=0.8
      - RESPONSE_MODE=automatic
      - LEARNING_ENABLED=true
      
      # Blockchain Configuration
      - BLOCKCHAIN_ENABLED=true
      - BLOCKCHAIN_NETWORK=ethereum
      - BLOCKCHAIN_RPC_URL=http://localhost:8545
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - PRIVATE_KEY=${PRIVATE_KEY}
      
      # Homomorphic Encryption Configuration
      - HOMOMORPHIC_ENCRYPTION_ENABLED=true
      - ENCRYPTION_SCHEME=paillier
      - KEY_SIZE=2048
      - SECURITY_LEVEL=128
      
      # Privacy Analytics Configuration
      - PRIVACY_ANALYTICS_ENABLED=true
      - DIFFERENTIAL_PRIVACY_ENABLED=true
      - FEDERATED_LEARNING_ENABLED=true
      - EPSILON=1.0
      - DELTA=1e-5
      - PRIVACY_BUDGET=10.0
      
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
    networks:
      - security-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: security-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - security-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  mongodb:
    image: mongo:6
    container_name: security-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=security
    volumes:
      - mongodb-data:/data/db
    networks:
      - security-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: security-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - advanced-security
    networks:
      - security-network
    restart: unless-stopped

volumes:
  redis-data:
  mongodb-data:

networks:
  security-network:
    driver: bridge
